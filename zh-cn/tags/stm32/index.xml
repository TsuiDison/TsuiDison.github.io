<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stm32 on Tsui</title>
    <link>https://TsuiDison.github.io/zh-cn/tags/stm32/</link>
    <description>Recent content in Stm32 on Tsui</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 13 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://TsuiDison.github.io/zh-cn/tags/stm32/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PID代码学习:程序移植</title>
      <link>https://TsuiDison.github.io/zh-cn/posts/pid%E7%A7%BB%E6%A4%8D%E7%A1%AC%E4%BB%B6%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Thu, 13 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://TsuiDison.github.io/zh-cn/posts/pid%E7%A7%BB%E6%A4%8D%E7%A1%AC%E4%BB%B6%E4%BB%A3%E7%A0%81/</guid>
      <description>&lt;h1 id=&#34;一些对软件的个性化设置&#34;&gt;&#xD;&#xA;  一些对软件的个性化设置&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%b8%80%e4%ba%9b%e5%af%b9%e8%bd%af%e4%bb%b6%e7%9a%84%e4%b8%aa%e6%80%a7%e5%8c%96%e8%ae%be%e7%bd%ae&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;链接到标题&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;链接到标题&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;h2 id=&#34;与vscode的联动&#34;&gt;&#xD;&#xA;  与vscode的联动&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%b8%8evscode%e7%9a%84%e8%81%94%e5%8a%a8&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;链接到标题&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;链接到标题&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;笔者的vscode有内联ai，又怎么肯在$\mu$Vision中老实跟着他打代码呢，但是在编译的时候又需要借助工程，于是参考&lt;a href=&#34;https://blog.csdn.net/weixin_45295367/article/details/125395692&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;某博客&lt;/a&gt;,在设置中添加了自动reload外部编译器修改的设置。&lt;/p&gt;&#xA;&lt;h2 id=&#34;繁琐步骤的精简&#34;&gt;&#xD;&#xA;  繁琐步骤的精简&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%e7%b9%81%e7%90%90%e6%ad%a5%e9%aa%a4%e7%9a%84%e7%b2%be%e7%ae%80&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;链接到标题&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;链接到标题&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;江协貌似每一次都要在软件里删，实际里删，然后再实际中添加，再在软件中添加。我觉得直接覆盖一遍的效果与这四部的效果是一样的&lt;/p&gt;&#xA;&lt;h1 id=&#34;前期代码移植&#34;&gt;&#xD;&#xA;  前期代码移植&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%89%8d%e6%9c%9f%e4%bb%a3%e7%a0%81%e7%a7%bb%e6%a4%8d&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;链接到标题&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;链接到标题&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;移植的OLED与LED都是属于hardware。&lt;/p&gt;&#xA;&lt;h2 id=&#34;oled&#34;&gt;&#xD;&#xA;  OLED&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#oled&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;链接到标题&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;链接到标题&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;根据视频指引，添加了更强的OLED支持工具，可以输出一些中文字符、浮点数等，&lt;/p&gt;&#xA;&lt;h2 id=&#34;led&#34;&gt;&#xD;&#xA;  LED&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#led&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;链接到标题&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;链接到标题&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;需要修改一些名称，按照&lt;a href=&#34;https://www.bilibili.com/video/BV1G9zdYQEr3/?p=4&amp;amp;spm_id_from=333.1387.top_right_bar_window_history.content.click&amp;amp;vd_source=eca564ad7b44345c8105eebb08f088c6&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;视频操作&lt;/a&gt;，可以归纳为以下几个点&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;修改&lt;code&gt;LED.c&lt;/code&gt;文件里面的定义，将LED1全部改成LED，接口改Pin_13,删去所有关于LED2的函数&lt;/li&gt;&#xA;&lt;li&gt;将&lt;code&gt;LED.h&lt;/code&gt;文件中的LED1与LED2作相应的修改(换名与删除)&lt;/li&gt;&#xA;&lt;li&gt;在主文件&lt;code&gt;main.c&lt;/code&gt;中编写测试代码，&lt;/li&gt;&#xA;&lt;li&gt;运行，拷入，没有问题证明移植成功。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;按键key&#34;&gt;&#xD;&#xA;  按键key&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%8c%89%e9%94%aekey&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;链接到标题&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;链接到标题&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;h3 id=&#34;移植定时器从而实现非阻塞式&#34;&gt;&#xD;&#xA;  移植定时器(从而实现非阻塞式)&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%e7%a7%bb%e6%a4%8d%e5%ae%9a%e6%97%b6%e5%99%a8%e4%bb%8e%e8%80%8c%e5%ae%9e%e7%8e%b0%e9%9d%9e%e9%98%bb%e5%a1%9e%e5%bc%8f&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;链接到标题&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;链接到标题&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在system中移植定时器&lt;/li&gt;&#xA;&lt;li&gt;修改TIM2为TIM1(因为TIM2另有用途)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;注意这里后面改TIM1，但是前面改PB1为PB2&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对于高级定时器TIM2_IRQn需要查阅其定义使用更新型定时器移植过来(具体原理不懂)&lt;/li&gt;&#xA;&lt;li&gt;下面的测试函数则需要在Start中找结果&lt;/li&gt;&#xA;&lt;li&gt;测试，在main.c函数中同理编写即可&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;key&#34;&gt;&#xD;&#xA;  key&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#key&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;链接到标题&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;链接到标题&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;首先需要改pin，这里根据他的解释我终于知道改数字的依据是什么了：见视频17:30时候对引脚电路的描述，本质上是为了引脚之间关系要对得上，比如K1与K2按键对应的事stm32的pin10和pin11，因此就要将阿健进行相应的修改。&lt;/li&gt;&#xA;&lt;li&gt;完成所有修改之后就可以进行测试了，编写一个简单的if语句即可。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;旋钮&#34;&gt;&#xD;&#xA;  旋钮&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%97%8b%e9%92%ae&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;链接到标题&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;链接到标题&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;这一个步骤需要用到模数转换，因此将stm32教程的模数转换部分移植过来，(之后更名为RP)&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;在这里我有点清楚hardware和system的区别了，hardware都是外接的设备，比如按键、旋钮、LED等，而system应该是已有设备实现的一些功能，比如计数器。&lt;/p&gt;</description>
    </item>
    <item>
      <title>在stm32上运行第一个程序</title>
      <link>https://TsuiDison.github.io/zh-cn/posts/stm32/</link>
      <pubDate>Sun, 09 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://TsuiDison.github.io/zh-cn/posts/stm32/</guid>
      <description>&lt;p&gt;下面的日志是学习&lt;a href=&#34;https://www.bilibili.com/video/BV1th411z7sn/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;江协科技教程&lt;/a&gt;的一个随手记录，以及自己出bug的一些补充，如果在观看视频跟随操作中出现了与笔者下面类似的一些bug，可以参考。&lt;/p&gt;&#xA;&lt;h1 id=&#34;支持包安装&#34;&gt;&#xD;&#xA;  支持包安装&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%94%af%e6%8c%81%e5%8c%85%e5%ae%89%e8%a3%85&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;链接到标题&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;链接到标题&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;定位到视频[2-1]-6:14&lt;/strong&gt;：在这里笔者无法通过直接点击pack进行支持包安装，经所搜，发现是应为未开管理员运行程序导致无法写入，管理员方式运行安装支持包方式如下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;找到安装支持包的程序：&lt;code&gt;&amp;quot;&amp;lt;你的Keil5的下载位置&amp;gt;\Keil5 MDK\UV4\PackInstaller.exe&amp;quot;&lt;/code&gt;，右键将其以管理员形式运行，&lt;/li&gt;&#xA;&lt;li&gt;然后再这里导入你想要安装的支持包(操作如下所示)&#xA;&lt;img src=&#34;https://TsuiDison.github.io/zh-cn/posts/stm32/inport_pack.jpg&#34; alt=&#34;alt text&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;等待右下角的进度条到100%即安装成功，然后按照视频中的检验方法(新建工程看能否选择stm32系列包)可检测是否安装成功&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;修改编码方式支持中文&#34;&gt;&#xD;&#xA;  修改编码方式支持中文&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%bf%ae%e6%94%b9%e7%bc%96%e7%a0%81%e6%96%b9%e5%bc%8f%e6%94%af%e6%8c%81%e4%b8%ad%e6%96%87&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;链接到标题&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;链接到标题&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;定位到视频[2-2]-12:32&lt;/strong&gt;：按确定的时候笔者报错&lt;code&gt;Access to E:\newdownloadapp\Keil5 MDK UV4\global.prop was denied&lt;/code&gt;,啊哈！还是因为没有管理员(这应该是因为笔者将keil安装在了一个要管理员权限才能编辑的文件夹里面的缘故)，用管理员运行Keil再修改即可完成。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
